version: '3.8'
services:
  web1:
    build: .
    volumes:
      - .:/app
    environment:
      SERVER_ID: SERVER-1

  web2:
    build: .
    volumes:
      - .:/app
    environment:
      SERVER_ID: SERVER-2

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - web1
      - web2

  postgres:
    image: postgres:latest
    container_name: postgres_molecules_app
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  celery_worker:
    build: .
    command: celery -A src.molecule.celery_worker worker --loglevel=info
    depends_on:
      - web1
      - web2
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

    airflow-init:
    image: apache/airflow:2.7.0
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}

  airflow-webserver:
      build:
        context: .
        dockerfile: Dockerfile.airflow  # to use the separate Dockerfile for Airflow
      container_name: airflow-webserver
      environment:
        - AIRFLOW__CORE__EXECUTOR=LocalExecutor
        - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:${DB_PASSWORD}@postgres_molecules_app:5432/${DB_NAME}
        - AIRFLOW__CORE__LOAD_EXAMPLES=False
      ports:
        - "8080:8080"
      depends_on:
        - postgres
      volumes:
        - ./dags:/opt/airflow/dags
        - ./logs:/opt/airflow/logs
        - ./plugins:/opt/airflow/plugins

  airflow-scheduler:
      build:
        context: .
        dockerfile: Dockerfile.airflow
      container_name: airflow-scheduler
      environment:
        - AIRFLOW__CORE__EXECUTOR=LocalExecutor
        - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:${DB_PASSWORD}@postgres_molecules_app:5432/${DB_NAME}
      depends_on:
        - airflow-webserver
        - postgres
      volumes:
        - ./dags:/opt/airflow/dags
        - ./logs:/opt/airflow/logs
        - ./plugins:/opt/airflow/plugins

  airflow-worker:
      build:
        context: .
        dockerfile: Dockerfile.airflow
      container_name: airflow-worker
      environment:
        - AIRFLOW__CORE__EXECUTOR=LocalExecutor
        - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:${DB_PASSWORD}@postgres_molecules_app:5432/${DB_NAME}
      depends_on:
        - airflow-scheduler
      volumes:
        - ./dags:/opt/airflow/dags
        - ./logs:/opt/airflow/logs
        - ./plugins:/opt/airflow/plugins

  minio:
      image: minio/minio
      container_name: minio
      environment:
        - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
        - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
      command: server /data
      ports:
        - "9000:9000"
        - "9001:9001"
      volumes:
        - minio_data:/data

volumes:
  pgdata:
    driver: local
